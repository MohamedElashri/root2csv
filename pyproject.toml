[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "root2csv"
version = "0.1.0"
description = "Convert ROOT Trees and Graphs to CSV files"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Mohamed Elashri", email = "your.email@example.com" },
]
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Physics",
]
dependencies = [
    "uproot>=5.0.0",
    "numpy>=1.13.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "isort>=5.0",
    "ruff>=0.1.6",
    "mypy>=1.0",
    "build>=1.0.0",
    "twine>=4.0.0",
    "pre-commit>=3.5.0",
    "typing-extensions>=4.0.0",
    "types-setuptools>=57.0.0",
]
test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
]

[project.urls]
Homepage = "https://github.com/MohamedElashri/root2csv"
Repository = "https://github.com/MohamedElashri/root2csv.git"
Documentation = "https://github.com/MohamedElashri/root2csv#readme"
"Bug Tracker" = "https://github.com/MohamedElashri/root2csv/issues"

[project.scripts]
root2csv = "root2csv.cli:main"

[tool.setuptools]
packages = ["root2csv"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=root2csv --cov-report=term-missing"
testpaths = ["tests"]

[tool.black]
line-length = 100
target-version = ["py38"]
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | dev
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
extend_skip = ["dev/*"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
ignore_missing_imports = true
exclude = [
    "dev/.*",
    "build/.*",
    "dist/.*"
]

[tool.ruff]
select = [
    "E",   # pycodestyle
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "ERA", # eradicate
    "PL",  # pylint
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "RUF", # ruff-specific rules
]
line-length = 100
target-version = "py38"
extend-exclude = [
    "dev",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".tox",
    ".venv",
    "_build",
    "build",
    "dist",
]

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.coverage.run]
source = ["root2csv"]
branch = true
omit = [
    "dev/*",
    "tests/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true